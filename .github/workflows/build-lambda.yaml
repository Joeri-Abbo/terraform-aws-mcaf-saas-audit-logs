name: Build and Package Lambdas

on:
  push:
    # branches: Maybe only limit to main instead of all pushes?
    # - main

jobs:
  pkg:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [
        # "3.8", 
        # "3.9", "3.10", "3.11",
         "3.12"
        ]
        lambda-name: ["gitlab", "okta", "terraform-cloud"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd lambdas/${{ matrix.lambda-name }}/src
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create Lambda deployment package
        run: |
          cd lambdas/${{ matrix.lambda-name }}/src
          mkdir -p ../build
          cd venv/lib/python${{ matrix.python-version }}/site-packages
          zip -r ../../../../../build/lambda_function_${{ matrix.python-version }}.zip .
          cd ../../../../
          zip -g ../build/lambda_function_${{ matrix.python-version }}.zip -r * --exclude venv/\*

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.lambda-name }}-${{ matrix.python-version }}
          path: lambdas/${{ matrix.lambda-name }}/build/lambda_function_${{ matrix.python-version }}.zip

  push:
    runs-on: ubuntu-latest
    needs: pkg

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Remove old pkg artifacts
        run: |
          rm -rf lambdas/*/pkg/*

      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: lambdas/

      - name: Create pkg directories
        run: |
          for lambda_dir in lambdas/*; do
            mkdir -p "$lambda_dir/pkg"
          done

      - name: Move and rename artifacts
        run: |
          for lambda_dir in lambdas/*; do
            if [ -d "$lambda_dir/build" ]; then
              mv "$lambda_dir/build"/* "$lambda_dir/pkg/"
              rm -rf "$lambda_dir/build"
            fi
          done

      - name: List contents of pkg directories (for debugging)
        run: |
          for lambda_dir in lambdas/*; do
            echo "Contents of $lambda_dir/pkg:"
            ls -l "$lambda_dir/pkg"
          done

      - name: Conditionally add and commit deployment packages
        run: |
          if git status --porcelain | grep -q 'lambdas/*/pkg/*.zip'; then
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "GitHub Actions"
            git add lambdas/*/pkg/*.zip
            git commit -m "Add all Lambda deployment packages from previous builds"
          else
            echo "No changes to commit."
          fi

      - name: Push deployment packages
        if: success()
        run: |
          git push
